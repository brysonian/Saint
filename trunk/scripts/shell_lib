<?php

	function safe_mkdir($dir) {
		$fulldir = $dir;
		if ($fulldir{0} != '.' && $fulldir{0} != '/') $fulldir = getcwd().'/'.$fulldir;

		if (!realpath($fulldir)) {
			if (strpos($fulldir, '/') !== false) {
				$path = explode('/', $fulldir);
				array_pop($path);
				safe_mkdir(join('/', $path));
			}
		}
		if (!file_exists(realpath("../$fulldir").'/'.$fulldir)) {
			echo "\t create:  $dir\n";
			$ok = mkdir(realpath("../$fulldir").'/'.$fulldir);
			if (!$ok) die ("Failed to create: $fulldir\n");
			return $fulldir;
		}
	}
	
	// safe copy
	function safe_copy($source, $dest) {
		if(!is_file($source)) return false;
		if(is_file($dest)) return false;
		return copy($source, $dest);
	}

	// copy a directory tree
	function copyr($source, $dest) {
		// Simple copy for a file
		if (is_file($source)) {
			return copy($source, $dest);
		}

		// Make destination directory
		if (!is_dir($dest)) {
			safe_mkdir($dest);
		}

		// Loop through the folder
		$dir = dir($source);
		while (false !== $entry = $dir->read()) {
			// Skip pointers
			if ($entry == '.' || $entry == '..' || $entry == '.svn') continue;

			// Deep copy directories
			if ($dest !== "$source/$entry") {
				copyr("$source/$entry", "$dest/$entry");
			}
		}

		// Clean up
		$dir->close();
		return true;
	}
	
	
	// change permissions on a dir tree
	function chmodr($source, $mode) {
		if ($source{0} != '.' && $source{0} != '/') $source = getcwd().'/'.$source;
		
		$source = realpath($source);
		
		// handle a file
		if (is_file($source)) {
			return chmod($source, octdec($mode));
		}

		// Loop through the folder
		$dir = dir($source);
		while (false !== $entry = $dir->read()) {
			// Skip pointers
			if ($entry{0} == '.') continue;

			// recurse
			chmodr("$source/$entry", $mode);
		}

		// Clean up
		$dir->close();
		return true;
	}

	/**
	* get a list of files as an array
	* skipping dir pointers and hidden files
	*/
	function get_files($dirname) {
		$filelist = array();
		$dirhandle=opendir($dirname);
		while (($file = readdir($dirhandle))!==false) {
			if ($file{0} != '.') $filelist[] = $file;	// if not dir pointer, or hidden
		}
		closedir($dirhandle);
		return $filelist;
	}


	function write_file($path, $contents, $force=false) {
		if (file_exists($path)) {
			if (!$force) {
				#error("Failed to create $path file already exists.");
				echo "\t exists:  $path\n";
				return;
			} else {
				unlink($path);
			}
		}

		echo "\t create:  $path\n";
		$fp = fopen($path, "w");
		fwrite($fp, $contents);
		fclose($fp);
	}

	function write_script($dir, $cname, $code, $extension='php') {
		safe_mkdir($dir);
		write_file("$dir/$cname.".$extension, $code);
	}

// ===========================================================
// - ERRORS
// ===========================================================
	$errors = array();
	function error($msg, $fatal=false) {
		global $errors;
		$errors[] = $msg;
		if ($fatal) {
			display_errors();
			die();
		}
	}
	
	function display_errors() {
		global $errors;
		if (empty($errors)) return;
		echo "\n+----------------------------------------+\n";
		echo "|     SAINT experienced some errors:     |\n";
		echo "+----------------------------------------+\n";
		echo(join("\n", $errors)."\n\n\n");
	}

?>